<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{EFFF37AC-F7BB-39F8-B4DC-46449C1B9A3C}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>shaders</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/animate_materials.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/animate_materials.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/animate_materials.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/animate_materials.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/animate_materials.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/animate_materials.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/animate_materials.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/animate_materials.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\animate_materials.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/god_rays_filter.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays_filter.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/god_rays_filter.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays_filter.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/god_rays_filter.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays_filter.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/god_rays_filter.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays_filter.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays_filter.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/god_rays.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/god_rays.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/god_rays.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/god_rays.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/god_rays.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\god_rays.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/bloom_composite.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_composite.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/bloom_composite.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_composite.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/bloom_composite.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_composite.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/bloom_composite.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_composite.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_composite.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/bloom_blur.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_blur.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/bloom_blur.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_blur.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/bloom_blur.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_blur.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/bloom_blur.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/bloom_blur.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\bloom_blur.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/primary_rays.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/primary_rays.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/primary_rays.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/primary_rays.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/primary_rays.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/primary_rays.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/primary_rays.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/primary_rays.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\primary_rays.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/direct_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/direct_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/direct_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/direct_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/direct_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/direct_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/direct_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/direct_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\direct_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/checkerboard_interleave.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/checkerboard_interleave.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/checkerboard_interleave.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/checkerboard_interleave.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/checkerboard_interleave.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/checkerboard_interleave.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/checkerboard_interleave.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/checkerboard_interleave.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\checkerboard_interleave.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/indirect_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/indirect_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/indirect_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/indirect_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/indirect_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/indirect_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/indirect_lighting.rgen.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RGEN C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen -o C:/q2/q2rtx/baseq2/shader_vkpt/indirect_lighting.rgen.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\indirect_lighting.rgen;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rchit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RCHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rchit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rchit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RCHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rchit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rchit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RCHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rchit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rchit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RCHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rchit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rchit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/path_tracer.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_particle.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_particle.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_particle.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_particle.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_particle.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_particle.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_particle.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_particle.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_particle.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_sprite.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_sprite.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_sprite.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_sprite.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_sprite.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_sprite.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_sprite.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_sprite.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_sprite.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_beam.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_beam.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_beam.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_beam.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_beam.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_beam.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_beam.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_beam.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_beam.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_explosion.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_explosion.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_explosion.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_explosion.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_explosion.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_explosion.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_explosion.rahit.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_ACHIT C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_explosion.rahit.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_explosion.rahit;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_RMISS C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss -o C:/q2/q2rtx/baseq2/shader_vkpt/path_tracer_shadow.rmiss.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_shadow.rmiss;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_fwd_project.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_fwd_project.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_fwd_project.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_fwd_project.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_fwd_project.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_fwd_project.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_fwd_project.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_fwd_project.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_fwd_project.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_atrous.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_atrous.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_img.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_img.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_img.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_img.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_img.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_img.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_gradient_img.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_gradient_img.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_gradient_img.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_lf.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_lf.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_lf.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_lf.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_lf.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_lf.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_lf.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_lf.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_lf.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_seed_rng.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_seed_rng.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_seed_rng.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_seed_rng.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_seed_rng.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_seed_rng.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_seed_rng.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_seed_rng.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_seed_rng.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_taa.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_taa.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_taa.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_taa.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_taa.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_taa.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_taa.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_taa.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_taa.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/asvgf_temporal.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_temporal.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/asvgf_temporal.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_temporal.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/asvgf_temporal.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_temporal.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/asvgf_temporal.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/asvgf_temporal.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf_temporal.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/instance_geometry.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/instance_geometry.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/instance_geometry.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/instance_geometry.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/instance_geometry.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/instance_geometry.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/instance_geometry.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/instance_geometry.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\instance_geometry.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_histogram.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_histogram.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_histogram.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_histogram.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_histogram.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_histogram.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_histogram.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_histogram.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_histogram.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_curve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_curve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_curve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_curve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_curve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_curve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_curve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_curve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_curve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_apply.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_apply.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_apply.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_apply.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_apply.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_apply.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/tone_mapping_apply.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/tone_mapping_apply.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_apply.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/physical_sky.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/physical_sky.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/physical_sky.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/physical_sky.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/physical_sky_space.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky_space.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/physical_sky_space.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky_space.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/physical_sky_space.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky_space.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/physical_sky_space.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/physical_sky_space.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\physical_sky_space.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/shadow_map.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/shadow_map.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/shadow_map.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/shadow_map.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/shadow_map.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/shadow_map.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/shadow_map.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/shadow_map.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\shadow_map.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/sky_buffer_resolve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/sky_buffer_resolve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/sky_buffer_resolve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/sky_buffer_resolve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/sky_buffer_resolve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/sky_buffer_resolve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/sky_buffer_resolve.comp.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_COMP C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp -o C:/q2/q2rtx/baseq2/shader_vkpt/sky_buffer_resolve.comp.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky_buffer_resolve.comp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/stretch_pic.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/stretch_pic.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\stretch_pic.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/final_blit_lanczos.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit_lanczos.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/final_blit_lanczos.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit_lanczos.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/final_blit_lanczos.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit_lanczos.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/final_blit_lanczos.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_FRAG C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit_lanczos.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit_lanczos.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ../../baseq2/shader_vkpt/final_blit.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ../../baseq2/shader_vkpt/final_blit.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ../../baseq2/shader_vkpt/final_blit.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ../../baseq2/shader_vkpt/final_blit.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/q2/q2rtx/baseq2/shader_vkpt
if %errorlevel% neq 0 goto :cmEnd
C:\VulkanSDK\1.1.101.0\Bin\glslangValidator.exe --target-env vulkan1.1 -DVKPT_SHADER -V -DSHADER_STAGE_VERT C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert -o C:/q2/q2rtx/baseq2/shader_vkpt/final_blit.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/refresh/vkpt/shader/final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;C:\q2\q2rtx\src\refresh\vkpt\shader\asvgf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\brdf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\constants.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_textures.h;C:\q2\q2rtx\src\refresh\vkpt\shader\global_ubo.h;C:\q2\q2rtx\src\refresh\vkpt\shader\light_lists.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer_rgen.h;C:\q2\q2rtx\src\refresh\vkpt\shader\path_tracer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\precomputed_sky_params.h;C:\q2\q2rtx\src\refresh\vkpt\shader\projection.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\read_visbuf.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\sky.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tiny_encryption_algorithm.h;C:\q2\q2rtx\src\refresh\vkpt\shader\tone_mapping_utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\utils.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\vertex_buffer.h;C:\q2\q2rtx\src\refresh\vkpt\shader\water.glsl;C:\q2\q2rtx\src\refresh\vkpt\shader\final_blit.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\build\CMakeFiles\e36d112385646c3b59eb4afca547c30d\shaders.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/build/CMakeFiles/e36d112385646c3b59eb4afca547c30d/shaders.rule;C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\build\src\CMakeFiles\shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/build/CMakeFiles/e36d112385646c3b59eb4afca547c30d/shaders.rule;C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\build\src\CMakeFiles\shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/build/CMakeFiles/e36d112385646c3b59eb4afca547c30d/shaders.rule;C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\build\src\CMakeFiles\shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/build/CMakeFiles/e36d112385646c3b59eb4afca547c30d/shaders.rule;C:\q2\q2rtx\baseq2\shader_vkpt\animate_materials.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays_filter.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\god_rays.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_composite.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\bloom_blur.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\primary_rays.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\direct_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\checkerboard_interleave.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\indirect_lighting.rgen.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rchit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_particle.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_sprite.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_beam.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_explosion.rahit.spv;C:\q2\q2rtx\baseq2\shader_vkpt\path_tracer_shadow.rmiss.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_fwd_project.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_atrous.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_gradient_img.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_lf.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_seed_rng.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_taa.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\asvgf_temporal.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\instance_geometry.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_histogram.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_curve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\tone_mapping_apply.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\physical_sky_space.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\shadow_map.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\sky_buffer_resolve.comp.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\stretch_pic.vert.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit_lanczos.frag.spv;C:\q2\q2rtx\baseq2\shader_vkpt\final_blit.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\build\src\CMakeFiles\shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\q2\q2rtx\src\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/q2/q2rtx/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/q2/q2rtx -BC:/q2/q2rtx/build --check-stamp-file C:/q2/q2rtx/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/q2/q2rtx/src/CMakeLists.txt;C:\q2\q2rtx\cmake\compileShaders.cmake;C:\q2\q2rtx\src\CMakeLists.txt;C:\q2\q2rtx\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\q2\q2rtx\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/q2/q2rtx/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/q2/q2rtx -BC:/q2/q2rtx/build --check-stamp-file C:/q2/q2rtx/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/q2/q2rtx/src/CMakeLists.txt;C:\q2\q2rtx\cmake\compileShaders.cmake;C:\q2\q2rtx\src\CMakeLists.txt;C:\q2\q2rtx\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\q2\q2rtx\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/q2/q2rtx/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/q2/q2rtx -BC:/q2/q2rtx/build --check-stamp-file C:/q2/q2rtx/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/q2/q2rtx/src/CMakeLists.txt;C:\q2\q2rtx\cmake\compileShaders.cmake;C:\q2\q2rtx\src\CMakeLists.txt;C:\q2\q2rtx\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\q2\q2rtx\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/q2/q2rtx/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/q2/q2rtx -BC:/q2/q2rtx/build --check-stamp-file C:/q2/q2rtx/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/q2/q2rtx/src/CMakeLists.txt;C:\q2\q2rtx\cmake\compileShaders.cmake;C:\q2\q2rtx\src\CMakeLists.txt;C:\q2\q2rtx\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\q2\q2rtx\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="C:\q2\q2rtx\build\src\CMakeFiles\shaders" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\q2\q2rtx\build\ZERO_CHECK.vcxproj">
      <Project>{EA335473-2B8B-3808-8518-5452FE078E13}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>